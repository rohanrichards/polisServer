# first build or re-build:
# docker-compose up --build
# otherwise:
# docker-compose up

version: "3.1"

services:

  node:
    container_name: polis-server
    build:
      context: .
      dockerfile: Dockerfile
    env_file: docker-dev.env
    depends_on:
      - 'postgres'
      - 'static'
    networks:
      - 'polis-dev'
    ports:
      - "5000:5000"


  math:
    container_name: polis-math
    env_file: docker-dev.env
    depends_on:
      - 'postgres'
    networks:
      - 'polis-dev'
    build:
      context: https://github.com/rohanrichards/polisMath.git


  postgres:
    container_name: polis-db
    env_file: docker-dev.env
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-db
    networks:
      - 'polis-dev'
    volumes:
      - 'backups:/backups'
      - 'postgres:/var/lib/postgresql/data'


  clientparticipation:
    container_name: client-participation
    env_file: docker-dev.env
    depends_on:
      - 'postgres'
    networks:
      - 'polis-dev'
    build:
      context: https://github.com/rohanrichards/polisClientParticipation.git
    volumes:
      - 'client:/dist'


  clientadmin:
    container_name: client-admin
    env_file: docker-dev.env
    depends_on:
      - 'postgres'
    networks:
      - 'polis-dev'
    build:
      context: https://github.com/rohanrichards/polisClientAdmin.git
    volumes:
      - 'admin:/dist'


  static:
    container_name: polis-static
    env_file: docker-dev.env
    image: nginx:1.14
    depends_on:
      - 'clientparticipation'
    networks:
      - 'polis-dev'
    ports:
      - '5002:80'
    volumes:
      - 'admin:/usr/share/nginx/html'



networks:
  polis-dev:

volumes:
  backups:
  postgres:
  client:
  admin:
